name: Auto-Update package versions
on:
  pull_request_target:
    types:
      - labeled
      - created

jobs:
  remove-package-upgrade-label:
    if: ${{ github.event.label }} # If PR was triggered with label
    runs-on: ubuntu-latest 
    steps:
      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          number: ${{ github.event.number }}
          labels: upgrade-patch-version

  package-auto-updater:
    # If this event is for a PR creation, or has a specific label
    if: ${{ !github.event.label || github.event.label.name == 'upgrade-patch-version' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: '0'
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: reset package versions to the base
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }};
          git checkout origin/${{ github.event.pull_request.base.ref }} -- package.json;

          echo "BASE_VERSION=\$(npm pkg get version | sed 's/\"//g');"
          BASE_VERSION=$(npm pkg get version | sed 's/"//g');
          echo "BASE_VERSION=$BASE_VERSION";

          git reset --hard HEAD;

          echo "Starting version reversions...";
          yarn version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/cspell version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/errors version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/eslint-config-nori version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/ggit version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/math version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/project version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/quantification version --new-version $BASE_VERSION --no-git-tag-version --no-commit-hooks;
      - name: increment package versions
        run: |
          yarn version --patch --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/cspell version --patch --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/errors version --patch --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/eslint-config-nori version --patch --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/ggit version --patch --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/math version --patch --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/project version --patch --no-git-tag-version --no-commit-hooks;
          yarn workspace @nori-dot-com/quantification version --patch --no-git-tag-version --no-commit-hooks;
      - name: push updates to pr branch
        run: |
          git config --global user.email "github@nori.com";
          git config --global user.name "Github";
          git add .;
          git diff --staged --quiet || git commit -m "Upgrading package versions";
          git push;
