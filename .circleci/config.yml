version: 2.1
orbs:
  nx: nrwl/nx@1.6.1

defaults: &defaults
  working_directory: ~/repo
  environment:
    NODE_ENV: test
  docker:
    - image: circleci/node:14.18.1

jobs:
  upgrade-packages:
    <<: *defaults
    steps:
      - checkout 
      - nx/set-shas
      - run:
          name: Upgrade Packages
          command: |
            echo "upgrading packages (stubbed)";

            AFFECTED_PACKAGES=( $(nx print-affected --base=$NX_BASE --head=$NX_HEAD \
              | jq -r '.projects | join(" ")'
            ) );

            for PACKAGE in ${AFFECTED_PACKAGES[@]};
            do
              yarn workspace $PACKAGE version --patch --no-commit-hooks --no-git-tag-version;
            done

            echo "Upgrade package versions";
      - run:
          name: Commit Upgraded Package Versions
          command: |
            echo "upgrading packages (stubbed)";

            git add **/package.json;
            git commit -m "Auto-incrementing affected package versions [ci-skip]";
            git push origin ${CIRCLE_BRANCH};

            echo "Completed upgrade of affected packages";
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - repo
      
  setup-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Setup Environment
          command: |
            echo 'export PATH=./node_modules/.bin:$PATH' >> $BASH_ENV
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV
      - restore_cache:
          key: v-0-0-4-node_modules_dir-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: |
            if [ ! -d "node_modules" ]; then
              for i in 1 2; do
                yarn install --prefer-offline && break || sleep 15;
              done
              git checkout yarn.lock
            fi
      - save_cache:
          key: v-0-0-4-node_modules_dir-{{ checksum "yarn.lock" }}
          paths: # todo use generate-lockfile for each package and split cache keys by directories to improve performance when dependencies change https://circleci.com/docs/2.0/caching-strategy/#split-cache-keys-by-directory
            - packages/project/node_modules
            - packages/quantification/node_modules
            - packages/ggit/node_modules
            - packages/errors/node_modules
            - packages/math/node_modules
            - packages/eslint-config-nori/node_modules
            - packages/cspell/node_modules
            - node_modules
            - ~/.cache
  run-regular-tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Setup Environment
          command: |
            echo 'export PATH=./node_modules/.bin:$PATH' >> $BASH_ENV
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV
      - restore_cache:
          key: v-0-0-4-node_modules_dir-{{ checksum "yarn.lock" }}
      - run:
          name: Run Tests and Collect Coverage
          command: |
            cd ~/repo
            nx run-many --target=build --all
            yarn run test --coverage -w=2
      - run:
          name: Upload Coverage Reports
          command: codecov --disable=gcov --token=$CODECOV_TOKEN

workflows:
  version: 2
  test:
    jobs:
      - setup-tests
      - upgrade-packages:
          requires:
            - setup-tests
          filters:
            branches:
              only:
                - master
                - /.*-qa/
                - NO-2768-package-upgrade-spike
      - run-regular-tests:
          requires:
            - upgrade-packages
